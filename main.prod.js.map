{"version":3,"file":"main.prod.js","mappings":"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","sources":["webpack://zazu/./about.js","webpack://zazu/./helpers/menu.js","webpack://zazu/./helpers/singleInstance.js","webpack://zazu/./helpers/startup.js","webpack://zazu/./helpers/window.js","webpack://zazu/./lib/configuration.js","webpack://zazu/./lib/env.js","webpack://zazu/./lib/globalEmitter.js","webpack://zazu/./lib/json.js","webpack://zazu/./lib/logger.js","webpack://zazu/./lib/pluginFreshRequire.js","webpack://zazu/./lib/screens.js","webpack://zazu/./lib/update.js","webpack://zazu/./main.js","webpack://zazu/external commonjs2 \"auto-launch\"","webpack://zazu/external commonjs2 \"fs-jetpack\"","webpack://zazu/external commonjs2 \"nestdb\"","webpack://zazu/external commonjs2 \"relaxed-json\"","webpack://zazu/external commonjs2 \"semver\"","webpack://zazu/external commonjs2 \"update-electron-app\"","webpack://zazu/external commonjs2 \"winston\"","webpack://zazu/external commonjs2 \"winston-daily-rotate-file\"","webpack://zazu/external node-commonjs \"electron\"","webpack://zazu/external node-commonjs \"events\"","webpack://zazu/external node-commonjs \"fs\"","webpack://zazu/external node-commonjs \"http\"","webpack://zazu/external node-commonjs \"https\"","webpack://zazu/external node-commonjs \"os\"","webpack://zazu/external node-commonjs \"path\"","webpack://zazu/external node-commonjs \"util\"","webpack://zazu/webpack/bootstrap","webpack://zazu/webpack/startup"],"sourcesContent":["const { app, clipboard, dialog } = require('electron')\nconst env = require('./lib/env')\n\nconst items = [\n  { name: 'App Environment', value: env.name },\n  { name: 'App Version', value: app.getVersion() },\n  { name: 'Electron Version', value: process.versions.electron },\n  { name: 'Node Version', value: process.versions.node },\n  { name: 'Chrome Version', value: process.versions.chrome },\n]\n\nmodule.exports = {\n  show () {\n    const detail = items.map((item) => {\n      return item.name + ': ' + item.value\n    }).join('\\n')\n    dialog.showMessageBox({\n      type: 'info',\n      message: 'Zazu App',\n      detail,\n      defaultId: 0,\n      buttons: ['Ok', 'Copy'],\n    }, (index) => {\n      if (index === 1) {\n        clipboard.writeText(detail)\n      }\n    })\n  },\n}\n","const { app, BrowserWindow, dialog, Menu, Tray } = require('electron')\nconst path = require('path')\n\nconst configuration = require('../lib/configuration')\nconst globalEmitter = require('../lib/globalEmitter')\nconst Update = require('../lib/update')\n\nconst openDevTools = () => {\n  const currentWindow = BrowserWindow.getFocusedWindow()\n  if (currentWindow) {\n    if (currentWindow.isDevToolsOpened()) {\n      currentWindow.closeDevTools()\n    }\n    currentWindow.openDevTools({\n      mode: 'undocked',\n    })\n  } else {\n    dialog.showMessageBox({\n      type: 'error',\n      message: 'No focused window',\n      detail: 'There are currently no focused windows.',\n      defaultId: 0,\n      buttons: ['Ok'],\n    })\n  }\n}\n\nconst appTemplate = [\n  {\n    label: 'Zazu',\n    submenu: [\n      { label: 'Undo', accelerator: 'Command+Z', selector: 'undo:' },\n      { label: 'Redo', accelerator: 'Shift+Command+Z', selector: 'redo:' },\n      { label: 'Cut', accelerator: 'Command+X', selector: 'cut:' },\n      { label: 'Copy', accelerator: 'Command+C', selector: 'copy:' },\n      { label: 'Paste', accelerator: 'Command+V', selector: 'paste:' },\n      { label: 'Select All', accelerator: 'Command+A', selector: 'selectAll:' },\n      {\n        label: 'Toggle Chrome DevTools',\n        accelerator: 'Alt+CmdOrCtrl+I',\n        click: openDevTools,\n      },\n      {\n        label: 'Quit',\n        accelerator: 'CmdOrCtrl+Q',\n        click: () => {\n          app.quit()\n        },\n      },\n    ],\n  },\n]\n\nconst trayTemplate = [\n  {\n    label: 'Toggle Zazu',\n    click () {\n      globalEmitter.emit('toggleWindow')\n    },\n  },\n  { type: 'separator' },\n  {\n    label: 'About Zazu',\n    click () {\n      globalEmitter.emit('showAbout')\n    },\n  },\n  { type: 'separator' },\n  {\n    label: 'Development',\n    submenu: [\n      {\n        label: 'Chrome DevTools',\n        accelerator: 'Alt+CmdOrCtrl+I',\n        click: openDevTools,\n      },\n    ],\n  },\n  { type: 'separator' },\n  {\n    label: 'Check for Updates',\n    click: () => {\n      Update.check(true)\n    },\n  },\n  {\n    label: 'Update Plugins',\n    click: () => {\n      globalEmitter.emit('updatePlugins')\n    },\n  },\n  {\n    label: 'Open Config',\n    click: () => {\n      globalEmitter.emit('openConfig')\n    },\n  },\n  {\n    label: 'Reload Config',\n    click: () => {\n      globalEmitter.emit('reloadConfig')\n    },\n  },\n  { type: 'separator' },\n  {\n    label: 'Quit',\n    accelerator: 'CmdOrCtrl+Q',\n    click: () => {\n      globalEmitter.emit('quit')\n    },\n  },\n]\n\n// Remove \"Toggle Zazu\" for the exposed menu template\nconst menuTemplate = trayTemplate.slice(2)\n\nlet tray\nmodule.exports = {\n  createMenu: (iconPath) => {\n    if (app.dock) app.dock.hide()\n    if (!configuration.hideTrayItem) {\n      tray = new Tray(iconPath)\n      tray.setToolTip('Toggle Zazu')\n      tray.setContextMenu(Menu.buildFromTemplate(trayTemplate))\n    }\n    Menu.setApplicationMenu(Menu.buildFromTemplate(appTemplate))\n  },\n  menuTemplate,\n}\n","const { app } = require('electron')\nconst globalEmitter = require('../lib/globalEmitter')\n\nmodule.exports = () => {\n  const gotTheLock = app.requestSingleInstanceLock()\n\n  if (!gotTheLock) {\n    app.quit()\n  } else {\n    globalEmitter.emit('showWindow')\n  }\n}\n","const AutoLaunch = require('auto-launch')\nconst Datastore = require('nestdb')\nconst { app } = require('electron')\nconst path = require('path')\nconst env = require('../lib/env')\nconst logger = require('../lib/logger')\n\nconst alreadyAddedToStartup = (database) => {\n  return new Promise((resolve, reject) => {\n    database.find({ key: 'addedToStartup' }).exec((err, docs) => {\n      if (err) reject(err)\n      resolve(docs.length > 0)\n    })\n  })\n}\n\nconst markAddedToStartup = (database) => {\n  return new Promise((resolve, reject) => {\n    database.insert({ key: 'addedToStartup', value: true }, (err) => {\n      err ? reject(err) : resolve()\n    })\n  })\n}\n\nconst addToStartup = () => {\n  const isLinux = ['win32', 'darwin'].indexOf(process.platform) === -1\n  if (isLinux) {\n    const appLauncher = new AutoLaunch({\n      name: 'Zazu App',\n    })\n\n    appLauncher.isEnabled().then((enabled) => {\n      if (enabled) return\n      logger.log('info', 'Adding to linux startup')\n      return appLauncher.enable()\n    })\n  } else {\n    const settings = app.getLoginItemSettings()\n    if (!settings.openAtLogin) {\n      logger.log('info', 'Adding to win32 or darwin startup')\n      app.setLoginItemSettings({\n        openAtLogin: true,\n      })\n    }\n  }\n}\n\nmodule.exports = (configuration) => {\n  if (env.name !== 'production') return\n  const databasePath = path.join(configuration.databaseDir, 'settings.nedb')\n  const database = new Datastore({ filename: databasePath, autoload: true })\n  return alreadyAddedToStartup(database).then((value) => {\n    if (value) return\n    return markAddedToStartup(database).then(addToStartup)\n  })\n}\n","const electron = require('electron')\nconst globalEmitter = require('../lib/globalEmitter')\nconst { BrowserWindow } = electron\n\nconst autoResize = (dynamicWindow) => {\n  const defaultSize = {\n    width: dynamicWindow.getSize()[0],\n    height: dynamicWindow.getSize()[1],\n  }\n\n  let currentHeight = defaultSize.height\n  const resize = (height) => {\n    if (height !== currentHeight) {\n      currentHeight = height\n      dynamicWindow.setSize(defaultSize.width, height)\n    }\n  }\n\n  const updateHeight = () => {\n    if (!dynamicWindow) { return }\n    dynamicWindow.webContents.executeJavaScript('document.body.children[0].offsetHeight', (mainContentHeight) => {\n      resize(mainContentHeight)\n    })\n  }\n\n  let updateHeightIntervalId = null\n  const clearUpdateHeightInterval = () => {\n    if (updateHeightIntervalId) {\n      clearInterval(updateHeightIntervalId)\n      updateHeightIntervalId = null\n    }\n  }\n\n  // register updateHeight interval only when dynamicWindow is visible\n  const registerUpdateHeightInterval = () => {\n    clearUpdateHeightInterval()\n    if (dynamicWindow.isVisible()) {\n      // avoid 125ms delay and redraw the window right away\n      updateHeight()\n      updateHeightIntervalId = setInterval(updateHeight, 125)\n    }\n  }\n\n  dynamicWindow.webContents.on('did-finish-load', () => {\n    // remove the interval as soon as the dynamicWindow is not visible or destroyed\n    dynamicWindow.on('closed', clearUpdateHeightInterval)\n    dynamicWindow.on('hide', clearUpdateHeightInterval)\n\n    // reregister the interval as soon as the window is visible\n    dynamicWindow.on('show', () => {\n      registerUpdateHeightInterval()\n    })\n\n    // if the window is already visible, the interval should be set\n    registerUpdateHeightInterval()\n  })\n}\n\nconst namedWindows = {}\n\nconst openCount = () => {\n  return Object.keys(namedWindows).reduce((memo, windowName) => {\n    const namedWindow = namedWindows[windowName]\n    if (namedWindow) {\n      if (namedWindow.isVisible()) memo++\n      if (namedWindow.webContents.isDevToolsOpened()) memo++\n    }\n    return memo\n  }, 0)\n}\n\nconst windowHelper = (name, options) => {\n  if (namedWindows[name]) {\n    namedWindows[name].focus()\n    return namedWindows[name]\n  }\n\n  namedWindows[name] = new BrowserWindow(options)\n  if (options.autoResize) {\n    autoResize(namedWindows[name])\n  }\n\n  namedWindows[name].on('closed', () => {\n    namedWindows[name] = null\n    globalEmitter.emit('debuggerClosed')\n  })\n\n  namedWindows[name].loadURL(options.url)\n\n  return namedWindows[name]\n}\n\nmodule.exports = {\n  windowHelper,\n  openCount,\n}\n","const jetpack = require('fs-jetpack')\nconst path = require('path')\nconst { parse } = require('relaxed-json')\n\nclass Configuration {\n  constructor () {\n    const cwd = process.cwd()\n    const portableHome = path.join(cwd, 'portable')\n    if (require('fs').existsSync(portableHome)) {\n      process.env.ZAZU_HOME = portableHome\n    }\n\n    const home = process.env.ZAZU_HOME || require('os').homedir()\n    this.profilePath = path.join(home, '.zazurc.json')\n    this.pluginDir = path.join(home, '.zazu/plugins/')\n    this.databaseDir = path.join(home, '.zazu/databases')\n    this.logDir = path.join(home, '.zazu/log')\n    this.plugins = []\n    this.loaded = false\n    this.theme = ''\n    this.hotkey = ''\n    this.debug = false\n    this.blur = false\n    this.hideTrayItem = false\n    this.height = 400\n  }\n\n  load () {\n    if (this.loaded) return\n\n    if (!jetpack.exists(this.profilePath)) {\n      const template = require('../templates/zazurc.json')\n      jetpack.write(this.profilePath, template)\n    }\n\n    try {\n      const data = parse(jetpack.read(this.profilePath))\n      this.plugins = data.plugins\n      this.theme = data.theme\n      this.hotkey = data.hotkey\n      this.displayOn = data.displayOn !== 'primary' ? 'detect' : 'primary'\n      this.debug = data.debug\n      this.hideTrayItem = data.hideTrayItem\n      this.loaded = true\n      this.blur = data.blur\n      this.height = data.height || this.height\n    } catch (e) {\n      const logger = require('./logger')\n      logger.error('Attempted to load an invalid ~/.zazurc.json file', e)\n    }\n\n    return this.loaded\n  }\n}\n\nconst configuration = new Configuration()\n\nmodule.exports = configuration\n","module.exports = {\n  isRenderer: process.type === 'renderer',\n  isMain: process.type !== 'renderer',\n  name: process.env.NODE_ENV || 'production',\n}\n","const electron = require('electron')\nconst { EventEmitter } = require('events')\n\nclass MyEmitter extends EventEmitter {\n  on (eventName, listener) {\n    super.on(eventName, listener)\n    this.ipc.on(eventName, (event, ...args) => {\n      listener(...args)\n    })\n  }\n}\n\nclass MainEmitter extends MyEmitter {\n  constructor () {\n    super()\n    this.ipc = electron.ipcMain\n  }\n\n  emit (eventName, ...args) {\n    super.emit(eventName, ...args)\n    electron.BrowserWindow.getAllWindows().forEach((window) => {\n      window.webContents.send(eventName, ...args)\n    })\n  }\n}\n\nclass RendererEmitter extends MyEmitter {\n  constructor () {\n    super()\n    this.ipc = electron.ipcRenderer\n  }\n\n  emit (eventName, ...args) {\n    super.emit(eventName, ...args)\n    this.ipc.send(eventName, ...args)\n    window.electronAPI.sendEventToOtherWindows(eventName, ...args)\n  }\n}\n\nlet instance\nif (process.type === 'renderer') {\n  instance = new RendererEmitter()\n} else {\n  instance = new MainEmitter()\n}\nmodule.exports = instance\n","const electron = require('electron')\nconst https = require('https')\nconst http = require('http')\nconst app = electron.app\n\nmodule.exports = (opts) => {\n  const options = Object.assign({}, opts, {\n    headers: {\n      'User-Agent': `ZazuApp v${app.getVersion()}`,\n    },\n  })\n  return new Promise((resolve, reject) => {\n    const lib = opts.https ? https : http\n    lib.get(options, (res) => {\n      var chunks = []\n      res.on('data', (chunk) => {\n        chunks.push(chunk.toString())\n      })\n      res.on('end', () => {\n        resolve(JSON.parse(chunks.join('')))\n      })\n      res.on('error', (e) => {\n        reject(e)\n      })\n    }).on('error', (e) => {\n      reject(e)\n    })\n  })\n}\n","const RotateTransport = require('winston-daily-rotate-file')\nconst winston = require('winston')\nconst jetpack = require('fs-jetpack')\nconst util = require('util')\n\nconst configuration = require('./configuration')\n\njetpack.dir(configuration.logDir)\n\nconst transports = [\n  new RotateTransport({\n    filename: 'zazu.log',\n    dirname: configuration.logDir,\n    maxFiles: 3,\n  }),\n]\n\nconst logger = winston.createLogger({\n  level: 'debug',\n  exitOnError: false,\n  transports,\n})\n\nlogger.bindMeta = (data) => {\n  return {\n    log: (type, message, options) => {\n      const mergedOptions = Object.assign({}, options, data)\n      logger.log(type, message, mergedOptions)\n    },\n    error: (message, error) => {\n      const mergedOptions = Object.assign({}, data, { error: util.inspect(error) })\n      logger.log('error', message, mergedOptions)\n    },\n  }\n}\n\nlogger.error = (message, error) => {\n  logger.log('error', message, { error: util.inspect(error) })\n}\n\nmodule.exports = logger\n","const path = require('path')\n\nmodule.exports = (pluginPath) => {\n  const pluginName = path.basename(pluginPath)\n  Object.keys(require.cache).forEach((file) => {\n    if (file.indexOf(pluginName) !== -1) {\n      delete require.cache[file]\n    }\n  })\n}\n","const electron = require('electron')\nconst configuration = require('../lib/configuration')\n\nclass Screens {\n  static getInstance (options) {\n    if (configuration.displayOn !== 'detect') {\n      return new PrimaryScreens(options)\n    }\n    return new DetectScreens(options)\n  }\n}\n\nclass PrimaryScreens {\n  saveWindowPositionOnCurrentScreen () {}\n  getCenterPositionOnCurrentScreen () {}\n}\n\nclass DetectScreens {\n  constructor ({ windowWidth }) {\n    this.windowWidth = windowWidth\n    this.initialized = false\n  }\n\n  monitorDisplays () {\n    if (this.initialized) return\n    this.initialized = true\n    this.positions = {}\n    this.screenModule = electron.screen\n    this.screenModule.on('display-added', () => {\n      this.positions = {}\n    })\n    this.screenModule.on('display-removed', () => {\n      this.positions = {}\n    })\n    this.screenModule.on('display-metrics-changed', () => {\n      this.positions = {}\n    })\n  }\n\n  getCurrentScreen () {\n    const point = this.screenModule.getCursorScreenPoint()\n    return this.screenModule.getDisplayNearestPoint(point)\n  }\n\n  saveWindowPositionOnCurrentScreen (positionX, positionY) {\n    const currentScreen = this.getCurrentScreen()\n    const closestScreen = this.screenModule.getDisplayNearestPoint({\n      x: positionX,\n      y: positionY,\n    })\n    this.positions[currentScreen.id] = this.positions[currentScreen.id] || {}\n    const position = this.positions[currentScreen.id]\n\n    if (currentScreen.id === closestScreen.id) {\n      if (position.customPosition) {\n        position.lastPosition = position.customPosition\n      }\n      position.customPosition = {\n        x: positionX,\n        y: positionY,\n        time: Date.now(),\n      }\n    } else if (position.customPosition && position.lastPosition) {\n      const timeDiff = (Date.now() - position.customPosition.time)\n      if (timeDiff < 50) {\n        // if second move event fired in quick succession then replace the\n        // current position with last to fix linux duplicate 'move' event bug\n        position.customPosition = position.lastPosition\n      }\n    }\n  }\n\n  getCenterPositionOnCurrentScreen () {\n    this.monitorDisplays()\n    const currentScreen = this.getCurrentScreen()\n    const position = this.positions[currentScreen.id] || {}\n    if (position.customPosition) {\n      return {\n        x: position.customPosition.x,\n        y: position.customPosition.y,\n      }\n    }\n    return {\n      x: Math.ceil(((currentScreen.bounds.x + (currentScreen.bounds.width / 2)) - (this.windowWidth / 2))),\n      y: Math.ceil(currentScreen.bounds.y + (currentScreen.bounds.height * 0.33)),\n    }\n  }\n}\n\nmodule.exports = Screens\n","const semver = require('semver')\nconst json = require('./json')\nconst { shell, app, dialog } = require('electron')\n\nconst globalEmitter = require('./globalEmitter')\nconst logger = require('./logger')\n\nvar self = {\n  _latestVersion: null,\n\n  queueUpdate () {\n    const thirtySeconds = 1000 * 30\n    setTimeout(() => {\n      self.check()\n    }, thirtySeconds)\n  },\n\n  stallUpdate () {\n    const oneDay = 1000 * 60 * 60 * 24\n    setTimeout(() => {\n      self.check()\n    }, oneDay)\n  },\n\n  latestVersion () {\n    return new Promise((resolve, reject) => {\n      if (self._latestVersion) {\n        return resolve(self._latestVersion)\n      }\n      json({\n        https: false,\n        host: 'zazuapp.org',\n        path: '/api/version.json',\n      })\n        .then(body => {\n          resolve(body.version || app.getVersion())\n        })\n        .catch(e => {\n          reject(new Error(`Got error: ${e.message}`))\n        })\n    })\n  },\n\n  needsUpdate () {\n    return self.latestVersion().then(newestVersion => {\n      return semver.satisfies(newestVersion, `>${app.getVersion()}`) && newestVersion\n    })\n  },\n\n  check (manualUpdate) {\n    self\n      .needsUpdate()\n      .then(updateVersion => {\n        if (updateVersion) {\n          logger.log('info', 'needs zazu software update', { updateVersion })\n          globalEmitter.emit('showWindow')\n          dialog.showMessageBox(\n            {\n              type: 'question',\n              buttons: ['Ignore', 'Download'],\n              defaultId: 1,\n              cancelId: 0,\n              title: 'Zazu Updater',\n              message: 'Zazu ' + updateVersion + ' is available for download!',\n              detail: 'Click download to get the newest version of Zazu!',\n            },\n            response => {\n              if (response === 1) {\n                logger.log('info', 'I need it now!', { updateVersion })\n                shell.openExternal('http://zazuapp.org/download/')\n              } else {\n                logger.log('info', 'Eh, maybe later', { updateVersion })\n              }\n            }\n          )\n        } else if (manualUpdate) {\n          dialog.showMessageBox({\n            type: 'none',\n            title: 'Zazu Updater',\n            message: 'Your Zazu version is up to date!',\n            detail: 'No Zazu Updates were found.',\n            buttons: [],\n          })\n        } else {\n          self.stallUpdate()\n        }\n      })\n      .catch(error => {\n        logger.error(error)\n      })\n  },\n}\n\nmodule.exports = self\n","const { dialog, app, globalShortcut, shell, ipcMain, Menu } = require('electron')\nconst path = require('path')\n\nconst Screens = require('./lib/screens')\nconst configuration = require('./lib/configuration')\nconst globalEmitter = require('./lib/globalEmitter')\nconst logger = require('./lib/logger')\nconst pluginFreshRequire = require('./lib/pluginFreshRequire')\n\nconst { windowHelper, openCount } = require('./helpers/window')\nconst forceSingleInstance = require('./helpers/singleInstance')\nconst addToStartup = require('./helpers/startup')\nconst { createMenu } = require('./helpers/menu')\nconst about = require('./about')\nconst { menuTemplate } = require('./helpers/menu')\nconst electron = require('electron')\nconst { updateElectronApp } = require('update-electron-app')\n\nglobalEmitter.on('showAbout', message => {\n  logger.log('info', 'opening about page')\n  about.show()\n})\n\nglobalEmitter.on('openConfig', message => {\n  shell.openItem(configuration.profilePath)\n})\nglobalEmitter.on('reloadConfig', message => {\n  app.relaunch()\n  app.exit()\n})\n\nglobalEmitter.on('pluginFreshRequire', pluginPath => {\n  pluginFreshRequire(pluginPath)\n})\n\nglobalEmitter.on('quit', () => app.quit())\n\napp.whenReady().then(() => {\n  if (!configuration.load()) {\n    return dialog.showMessageBox(\n      {\n        type: 'error',\n        message: 'You have an invalid ~/.zazurc.json file.',\n        detail: 'Please edit your ~/.zazurc.json file and try loading Zazu again.',\n        defaultId: 0,\n        buttons: ['Ok'],\n      },\n      () => {\n        app.quit()\n      }\n    )\n  }\n  logger.debug('app is ready', {\n    version: app.getVersion(),\n  })\n  createMenu(path.join(__dirname, 'assets', 'images', 'iconTemplate.png'))\n  updateElectronApp()\n  forceSingleInstance()\n  addToStartup(configuration)\n\n  globalEmitter.on('registerHotkey', accelerator => {\n    if (!globalShortcut.isRegistered(accelerator)) {\n      logger.log('verbose', 'registered a hotkey', { hotkey: accelerator })\n      try {\n        globalShortcut.register(accelerator, () => {\n          globalEmitter.emit('triggerHotkey', accelerator)\n          logger.log('info', 'triggered a hotkey', { hotkey: accelerator })\n        })\n      } catch (e) {\n        logger.log('error', 'failed to register hotkey', { hotkey: accelerator })\n      }\n    }\n  })\n\n  logger.log('verbose', `registering zazu hotkey: ${configuration.hotkey}`)\n  globalShortcut.register(configuration.hotkey, () => {\n    logger.log('info', 'triggered zazu hotkey')\n    globalEmitter.emit('toggleWindow')\n  })\n\n  const debug = !!configuration.debug\n  if (debug) logger.log('verbose', 'debug mode is on')\n\n  const windowHeight = configuration.height\n  const mainWindow = windowHelper('main', {\n    width: 600,\n    height: windowHeight,\n    maxHeight: windowHeight,\n    show: false,\n    frame: false,\n    resizable: false,\n    transparent: true,\n    vibrancy: 'light',\n    minimizable: false,\n    maximizable: false,\n    alwaysOnTop: true,\n    skipTaskbar: true,\n    fullscreenable: false,\n    title: 'Zazu',\n    autoResize: true,\n    url: path.join('file://', __dirname, '/index.html'),\n    webPreferences: {\n      preload: path.join(__dirname, process.env.NODE_ENV.match(/(development|test)/) ? 'preload.js' : 'preload.prod.js'),\n      backgroundThrottling: false,\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  })\n\n  const screens = Screens.getInstance({\n    windowWidth: mainWindow.getSize()[0],\n  })\n\n  if (debug) mainWindow.webContents.toggleDevTools({ mode: 'undocked' })\n\n  mainWindow.on('blur', () => {\n    logger.log('verbose', 'receiving blur event')\n    if (configuration.blur !== false && mainWindow.isVisible()) {\n      logger.log('verbose', 'sending hide event signal from blur event')\n      globalEmitter.emit('hideWindow')\n    }\n  })\n\n  globalEmitter.on('hideWindow', () => {\n    if (debug) return\n    logger.log('info', 'hiding window from manual trigger')\n    mainWindow.hide()\n  })\n\n  mainWindow.on('hide', () => {\n    if (openCount() === 0) {\n      app.hide && app.hide()\n    }\n  })\n\n  mainWindow.on('move', () => {\n    const currentWindowPosition = mainWindow.getPosition()\n    screens.saveWindowPositionOnCurrentScreen(currentWindowPosition[0], currentWindowPosition[1])\n  })\n\n  mainWindow.on('moved', () => {\n    const currentWindowPosition = mainWindow.getPosition()\n    screens.saveWindowPositionOnCurrentScreen(currentWindowPosition[0], currentWindowPosition[1])\n  })\n\n  globalEmitter.on('showWindow', () => {\n    logger.log('info', 'showing window from manual trigger')\n    const position = screens.getCenterPositionOnCurrentScreen()\n    if (position) {\n      mainWindow.setPosition(position.x, position.y)\n    }\n    mainWindow.show()\n    mainWindow.focus()\n  })\n\n  globalEmitter.on('toggleWindow', () => {\n    const type = mainWindow.isVisible() ? 'hideWindow' : 'showWindow'\n    logger.log('verbose', `sending ${type} event from toggle event`)\n    globalEmitter.emit(type)\n  })\n\n  globalEmitter.on('resizeWindow', (width, height) => {\n    mainWindow.setSize(width, height)\n  })\n})\n\napp.on('will-quit', () => {\n  logger.log('verbose', 'zazu is closing')\n  globalShortcut.unregisterAll()\n})\n\napp.on('window-all-closed', () => {\n  globalShortcut.unregisterAll()\n  app.quit()\n})\n\nipcMain.handle('getAppVersion', () => {\n  return app.getVersion()\n})\n\nipcMain.handle('getMenu', () => {\n  return Menu\n})\n\nipcMain.handle('createWindow', (event, name, options) => {\n  return windowHelper(name, options)\n})\n\nlet menu\n\nipcMain.handle('buildMenu', () => {\n  menu = Menu.buildFromTemplate(menuTemplate)\n})\n\nipcMain.handle('popupMenu', () => {\n  menu.popup()\n})\n\nipcMain.handle('sendEventToOtherWindows', (event, eventName, ...args) => {\n  const currentWindow = electron.BrowserWindow.getFocusedWindow()\n  electron.BrowserWindow.getAllWindows().forEach((window) => {\n    if (window !== currentWindow) {\n      window.webContents.send(eventName, ...args)\n    }\n  })\n})\n\nipcMain.handle('resizeWindow', (event, width, height) => {\n  globalEmitter.emit('resizeWindow', width, height)\n})\n\nconsole.log(__dirname)\n","module.exports = require(\"auto-launch\");","module.exports = require(\"fs-jetpack\");","module.exports = require(\"nestdb\");","module.exports = require(\"relaxed-json\");","module.exports = require(\"semver\");","module.exports = require(\"update-electron-app\");","module.exports = require(\"winston\");","module.exports = require(\"winston-daily-rotate-file\");","module.exports = require(\"electron\");","module.exports = require(\"events\");","module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"util\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the module cache\n__webpack_require__.c = __webpack_module_cache__;\n\n","// module cache are used so entry inlining is disabled\n// startup\n// Load entry module and return exports\nvar __webpack_exports__ = __webpack_require__(\"./main.js\");\n"],"names":["app","clipboard","dialog","require","items","name","value","getVersion","process","versions","electron","node","chrome","_ref","item","module","exports","show","detail","map","join","showMessageBox","type","message","defaultId","buttons","index","writeText","BrowserWindow","Menu","Tray","configuration","globalEmitter","Update","openDevTools","currentWindow","getFocusedWindow","isDevToolsOpened","closeDevTools","mode","appTemplate","label","submenu","accelerator","selector","click","quit","trayTemplate","emit","check","menuTemplate","slice","tray","createMenu","iconPath","dock","hide","hideTrayItem","setToolTip","setContextMenu","buildFromTemplate","setApplicationMenu","requestSingleInstanceLock","AutoLaunch","Datastore","path","env","logger","addToStartup","indexOf","platform","appLauncher","isEnabled","then","enabled","log","enable","getLoginItemSettings","openAtLogin","setLoginItemSettings","databasePath","databaseDir","database","filename","autoload","Promise","resolve","reject","find","key","exec","err","docs","length","alreadyAddedToStartup","insert","markAddedToStartup","autoResize","dynamicWindow","defaultSize","width","getSize","height","currentHeight","mainContentHeight","setSize","updateHeight","webContents","executeJavaScript","updateHeightIntervalId","clearUpdateHeightInterval","clearInterval","registerUpdateHeightInterval","isVisible","setInterval","_ref2","on","namedWindows","_ref3","memo","windowName","namedWindow","windowHelper","options","focus","loadURL","url","openCount","Object","keys","reduce","jetpack","parse","constructor","cwd","portableHome","ZAZU_HOME","home","this","profilePath","pluginDir","logDir","plugins","loaded","theme","hotkey","debug","blur","load","exists","template","write","data","read","displayOn","e","error","isRenderer","isMain","EventEmitter","MyEmitter","eventName","listener","super","ipc","event","args","MainEmitter","ipcMain","getAllWindows","forEach","window","send","RendererEmitter","ipcRenderer","electronAPI","sendEventToOtherWindows","instance","https","http","opts","assign","headers","get","res","chunks","chunk","push","toString","JSON","RotateTransport","winston","util","dir","transports","dirname","maxFiles","createLogger","level","exitOnError","bindMeta","mergedOptions","inspect","pluginPath","pluginName","basename","file","PrimaryScreens","saveWindowPositionOnCurrentScreen","getCenterPositionOnCurrentScreen","DetectScreens","windowWidth","initialized","monitorDisplays","positions","screenModule","screen","getCurrentScreen","point","getCursorScreenPoint","getDisplayNearestPoint","positionX","positionY","currentScreen","closestScreen","x","y","id","position","customPosition","lastPosition","time","Date","now","Math","ceil","bounds","getInstance","semver","json","shell","self","_latestVersion","host","body","version","catch","Error","_ref4","newestVersion","satisfies","_ref6","queueUpdate","setTimeout","stallUpdate","latestVersion","needsUpdate","manualUpdate","updateVersion","cancelId","title","response","openExternal","globalShortcut","Screens","pluginFreshRequire","forceSingleInstance","about","updateElectronApp","isRegistered","register","_ref5","menu","openItem","relaunch","exit","whenReady","__dirname","windowHeight","mainWindow","maxHeight","frame","resizable","transparent","vibrancy","minimizable","maximizable","alwaysOnTop","skipTaskbar","fullscreenable","webPreferences","preload","match","backgroundThrottling","nodeIntegration","contextIsolation","screens","toggleDevTools","currentWindowPosition","getPosition","setPosition","unregisterAll","handle","popup","console","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","c","__webpack_exports__"],"sourceRoot":""}