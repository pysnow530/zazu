{"version":3,"file":"preload.prod.js","mappings":"uCAAAA,EAAOC,QAAUC,QAAQ,W,GCCrBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,CAAC,GAOX,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,OACf,C,MCtBA,MAAM,YAAEQ,GAAgBP,EAAQ,YAEhCQ,OAAOC,YAAc,CACnBC,cAAeA,IAAMH,EAAYI,OAAO,iBACxCC,QAASA,IAAML,EAAYI,OAAO,WAClCE,aAAcA,CAACC,EAAMC,IAAYR,EAAYI,OAAO,eAAgBG,EAAMC,GAC1EC,UAAWA,IAAMT,EAAYI,OAAO,aACpCM,UAAWA,IAAMV,EAAYI,OAAO,aACpCO,wBAAyBA,CAACC,KAAcC,IAASb,EAAYI,OAAO,0BAA2BQ,KAAcC,GAC7GC,aAAcA,CAACC,EAAOC,KACpBhB,EAAYI,OAAO,eAAgBW,EAAOC,EAAO,E","sources":["webpack://zazu/external node-commonjs \"electron\"","webpack://zazu/webpack/bootstrap","webpack://zazu/./preload.js"],"sourcesContent":["module.exports = require(\"electron\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const { ipcRenderer } = require('electron')\n\nwindow.electronAPI = {\n  getAppVersion: () => ipcRenderer.invoke('getAppVersion'),\n  getMenu: () => ipcRenderer.invoke('getMenu'),\n  createWindow: (name, options) => ipcRenderer.invoke('createWindow', name, options),\n  buildMenu: () => ipcRenderer.invoke('buildMenu'),\n  popupMenu: () => ipcRenderer.invoke('popupMenu'),\n  sendEventToOtherWindows: (eventName, ...args) => ipcRenderer.invoke('sendEventToOtherWindows', eventName, ...args),\n  resizeWindow: (width, height) => {\n    ipcRenderer.invoke('resizeWindow', width, height)\n  },\n}\n"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","ipcRenderer","window","electronAPI","getAppVersion","invoke","getMenu","createWindow","name","options","buildMenu","popupMenu","sendEventToOtherWindows","eventName","args","resizeWindow","width","height"],"sourceRoot":""}